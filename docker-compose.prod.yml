
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hireassist-postgres-prod
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hireassist-network-prod
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hireassist-redis-prod
    command: redis-server --appendonly yes
    volumes:
      - redis_data_prod:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hireassist-network-prod
    restart: unless-stopped

  # FastAPI Backend
  backend:
    image: hireassist-backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hireassist-backend-prod
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: "false"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hireassist-network-prod
    restart: unless-stopped

  # React Frontend
  frontend:
    image: hireassist-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hireassist-frontend-prod
    environment:
      VITE_API_BASE_URL: ${FRONTEND_API_URL}
    depends_on:
      - backend
    networks:
      - hireassist-network-prod
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: hireassist-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - hireassist-network-prod
    restart: unless-stopped

volumes:
  postgres_data_prod:
  redis_data_prod:

networks:
  hireassist-network-prod:
    driver: bridge
