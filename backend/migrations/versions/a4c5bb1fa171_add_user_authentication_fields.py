"""Add user authentication fields

Revision ID: a4c5bb1fa171
Revises: 5091e6f83318
Create Date: 2025-10-30 14:18:17.084726

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a4c5bb1fa171'
down_revision: Union[str, Sequence[str], None] = '5091e6f83318'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('domain', sa.String(length=100), nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'RECRUITER', 'CANDIDATE', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('salary_range', postgresql.INT4RANGE(), nullable=True),
    sa.Column('status', sa.String(length=50), server_default='active', nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('applications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.Column('candidate_id', sa.UUID(), nullable=True),
    sa.Column('resume_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(length=50), server_default='submitted', nullable=True),
    sa.Column('applied_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('screening_results',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('application_id', sa.UUID(), nullable=True),
    sa.Column('overall_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('skill_match_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('experience_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('education_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('detailed_analysis', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('candidates', sa.Column('user_id', sa.UUID(), nullable=True))
    op.add_column('candidates', sa.Column('email', sa.String(length=255), nullable=False))
    op.add_column('candidates', sa.Column('phone', sa.String(length=50), nullable=True))
    op.add_column('candidates', sa.Column('location', sa.String(length=255), nullable=True))
    op.add_column('candidates', sa.Column('summary', sa.Text(), nullable=True))
    op.add_column('candidates', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.create_foreign_key(None, 'candidates', 'users', ['user_id'], ['id'])
    op.add_column('resumes', sa.Column('filename', sa.String(length=255), nullable=False))
    op.add_column('resumes', sa.Column('file_path', sa.String(length=500), nullable=False))
    op.add_column('resumes', sa.Column('parsed_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('resumes', sa.Column('raw_text', sa.Text(), nullable=True))
    op.add_column('resumes', sa.Column('skills', postgresql.ARRAY(sa.Text()), nullable=True))
    op.add_column('resumes', sa.Column('experience_years', sa.Integer(), nullable=True))
    op.add_column('resumes', sa.Column('education_level', sa.String(length=100), nullable=True))
    op.add_column('resumes', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('resumes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('resumes', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('resumes', 'updated_at')
    op.drop_column('resumes', 'education_level')
    op.drop_column('resumes', 'experience_years')
    op.drop_column('resumes', 'skills')
    op.drop_column('resumes', 'raw_text')
    op.drop_column('resumes', 'parsed_data')
    op.drop_column('resumes', 'file_path')
    op.drop_column('resumes', 'filename')
    op.drop_constraint(None, 'candidates', type_='foreignkey')
    op.drop_column('candidates', 'created_at')
    op.drop_column('candidates', 'summary')
    op.drop_column('candidates', 'location')
    op.drop_column('candidates', 'phone')
    op.drop_column('candidates', 'email')
    op.drop_column('candidates', 'user_id')
    op.drop_table('screening_results')
    op.drop_table('applications')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('organizations')
    # ### end Alembic commands ###
